#The function should return a list where all elements in
# lst with an index between start and end (inclusive) have been removed.

#For example, the following code should return [4, 23, 42] because elements
# at indices 1, 2, and 3 have been removed:
# remove_middle([4, 8 , 15, 16, 23, 42], 1, 3)

def remove_middle(lst,start,end):
    return lst[:start] + lst[end+1:]

print(remove_middle([1, 2, 3, 4, 5, 6], 3, 4))

#If there are an odd number of elements in lst, the function
#should return the middle element. If there are an even number of
#elements, the function should return the average of the middle two elements.

def middle_element(lst):
    if len(lst)%2 == 0:
        first = lst[int(len(lst)/2)]
        second = lst[int(len(lst)/2 - 1)]
        pair = (first + second)/2
        return pair
    else:
        return lst[int(len(lst)/2)]

print(middle_element([5, 2, -10, -4, 4, 5, 6]))
